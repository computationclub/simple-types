grammar Parser.Grammar

expression      <-  _* (term_expr / type_expr) _*           %term_expression

term_expr       <-  sequence
                 /  sequence_part

sequence_part   <-  application
                 /  app_operand

app_operand     <-  paren_expr
                 /  abstraction
                 /  variable
                 /  boolean_expr
                 /  numeric_expr
                 /  unit_expr

paren_expr      <-  "(" _* term_expr _* ")"                 %paren_term

sequence        <-  sequence_part _* ";" _* term_expr       %term_seq

application     <-  app_operand (_+ app_operand)+           %term_app

abstraction     <-  "λ" _* variable _* ":" _* type_expr
                    _* "." _* term_expr                     %term_abs

variable        <-  [a-z] ![a-z]                            %term_var

boolean_expr    <-  true_expr
                 /  false_expr
                 /  if_expr

true_expr       <-  "true"                                  %term_true
false_expr      <-  "false"                                 %term_false
if_expr         <-  "if" _+ term_expr _+ "then" _+
                    term_expr _+ "else" _+ term_expr        %term_if

numeric_expr    <-  zero
                 /  succ_expr
                 /  pred_expr
                 /  iszero_expr

zero            <-  "0"                                     %term_zero
succ_expr       <-  "succ" _+ term_expr                     %term_succ
pred_expr       <-  "pred" _+ term_expr                     %term_pred
iszero_expr     <-  "iszero" _+ term_expr                   %term_iszero

unit_expr       <-  "unit"                                  %term_unit

_               <-  [ \n\r\t]

type_expr       <-  function_type
                 /  func_operand

func_operand    <-  paren_type
                 /  boolean_type
                 /  numeric_type
                 /  unit_type
                 /  base_type

paren_type      <-  "(" _* type_expr _* ")"                 %paren_term

function_type   <-  func_operand _* "→" _* type_expr        %type_func

boolean_type    <-  "Bool"                                  %type_bool

numeric_type    <-  "Nat"                                   %type_nat

unit_type       <-  "Unit"                                  %type_unit

base_type       <-  [A-Z] [A-Za-z]*                         %type_base
