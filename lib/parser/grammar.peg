grammar Parser.Grammar

expression        <-  _* (statement / type) _*               %term_expression

# ==============================================================================

lambda            <-  "λ" / "\\"
arrow             <-  "→" / "->"
_                 <-  [ \n\r\t]

# ==============================================================================

statement         <-  control

control           <-  abstraction
                   /  if_term
                   /  term

term              <-  ascribable

ascribable        <-  application
                   /  app_base

app_base          <-  atom

atom              <-  projection
                   /  proj_base

proj_base         <-  paren_term
                   /  true_term
                   /  false_term
                   /  variable
                   /  record_term

# ==============================================================================

paren_term        <-  "(" _* statement _* ")"                     %paren_expr

# ==============================================================================

application       <-  app_base (_+ atom)+                         %term_app

abstraction       <-  lambda _* parameter _* ":" _* type
                      _* "." _* statement                         %term_abs

parameter         <-  variable / "_" %term_var

variable          <-  [a-z] ![a-z]                                %term_var

# ==============================================================================

true_term         <-  "true"                                      %term_true
false_term        <-  "false"                                     %term_false
if_term           <-  "if" _+ term _+ "then" _+
                      term _+ "else" _+ term                      %term_if

# ==============================================================================

projection        <-  proj_base (_* "." _* proj_field)+           %term_project
proj_field        <-  label

record_term       <-  "{" record_pair ("," record_pair)* "}"      %term_record
record_pair       <-  _* label _* "=" _* control _*
label             <-  [A-Za-z0-9_-]+

# ==============================================================================

type              <-  function_type
                   /  func_operand

func_operand      <-  sum_part

sum_part          <-  product_part

product_part      <-  paren_type
                   /  boolean_type
                   /  top_type
                   /  record_type

# ==============================================================================

paren_type        <-  "(" _* type _* ")"                          %paren_expr

function_type     <-  func_operand _* arrow _* type               %type_func

boolean_type      <-  "Bool" ![A-Za-z]                            %type_bool

top_type          <-  "Top"  ![A-Za-z]                            %type_top

record_type       <-  "{" rt_pair ("," rt_pair)* "}"              %type_record
rt_pair           <-  _* label _* ":" _* type _*
